name: Sonar
on:
  workflow_call:

jobs:
  build:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up dotnet version
        uses: actions/setup-dotnet@v4
        with: 
          dotnet-version: 8.0.x

      - name: Checkout 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Install sonar scanner
        run: dotnet tool install -g dotnet-sonarscanner    
        
      - name: Cache sonar
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Restore
        working-directory: './src' 
        run: dotnet restore

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: ./src/test-results
          
      - name: Analyze
        working-directory: './src' 
        run: |
          dotnet sonarscanner begin /k:"${{ env.PROJECT_KEY }}" /o:"${{ env.ORGANIZATION }}" /d:sonar.token="${{ env.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.dotnet.excludeTestProjects=true /d:sonar.scanner.scanAll=true /d:sonar.cs.opencover.reportsPaths="**/test-results/**/coverage.opencover.xml"
          dotnet build MudBlazor/MudBlazor.csproj -c Release --no-restore --no-incremental
          dotnet sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          PROJECT_KEY: MudBlazor_MudBlazor
          ORGANIZATION: mudblazor
